###################################
#                                 #
#   UNITS                         #
#                                 #
###################################

# The unit of time in this library is 1ns 
# The unit of capacitance in this library is 1pF 
#


###################################
#                                 #
#   CLEAN-UP                      #
#                                 #
###################################

# Remove any existing constraints and attributes
#
reset_design


###################################
#                                 #
#   CLOCK DEFINITION              #
#                                 #
###################################

create_clock -period 25 -name MAIN_CLOCK [get_ports clk]


# External clock source latency is 2ns 
# and the maximum internal clock network insertion delay or latency is 1 ns:
#
# latency is only needed for AP application
set_clock_latency -source  -max 2 [get_clocks MAIN_CLOCK] 
set_clock_latency -max 1 [get_clocks MAIN_CLOCK]


# 600ps skew (+300ps and -300ps) 
# 400ps jitter 
# 500ps setup margin;
# This equals 1.5 ns of total uncertainty.
#
set_clock_uncertainty -setup 1.5 [get_clocks MAIN_CLOCK]


# The maximum clock transition is 1ns
#
set_clock_transition 1.0 [get_clocks MAIN_CLOCK]

###################################
#                                 #
#   INPUT/OUTPUT TIMING           #
#                                 #
###################################

# Delay is estimated like below
# It is recommended to use 1/2 CLK period to input delay  

set_input_delay -max 4.0 -clock MAIN_CLOCK [all_inputs]
set_input_delay -min 2.0 -clock MAIN_CLOCK [all_inputs]
remove_input_delay [get_ports "clk"] 
set_input_delay -max 4.0 -clock MAIN_CLOCK [get_ports rst_n]
set_input_delay -min 2.0 -clock MAIN_CLOCK [get_ports rst_n]

set_output_delay -max 4.0  -clock MAIN_CLOCK [all_outputs]
set_output_delay -min -2.0  -clock MAIN_CLOCK [all_outputs]


###################################
#                                 #
#   DESIGN AREA                   #
#                                 #
###################################

# Area Constraint
#
set_max_area 0


###################################
#                                 #
#   ENVIRONMENTAL ATTRIBUTES      #
#                                 #
###################################


#####################
####### DRC  ########
# library default values are assigned to set_max_transition, max_capacitace, max_fanout
# no need to assign any values 
#set_max_transition 10.0 [remove_from_collection [all_inputs] [get_ports "IO* CLK RESETn"]]
#set_max_capacitance 100.0 [all_outputs] 
#set_max_fanout

# clk max fanout is out of our concern, because it is exceptional and it would be ideal network

# to determine wire load model automatically, turn off the below 2 lines 
#set auto_wire_load_selection false

set_wire_load_mode "top"

# operating condition use to scale cell and net delays.
#set_operating_condition -max "slow" -min "fast"


###################################
#                                 #
#   SPECIAL CLOCK DEFINITION      #
#                                 #
###################################

# there are some kinds of clock series 
# clock source is 1 but 3 or 4 kinds of clocks will be made 
# so we should define the proper constraints 

# divide clock by 2 to make HALF_CLK in top SoC module 
# try your self to make HALF_CLK here
# 1/2 speed and it's from MAIN_CLOCK
# uncertainty, latency, transition values are all 0.5

# Create path groups for I/O/combo paths if I/O constraints are not accurate 
# 10% of max delay 
group_path -name INPUTS -from [all_inputs]
group_path -name OUTPUTS -to [all_outputs]
group_path -name COMBO -from [all_inputs] -to [all_outputs]

group_path -name MAIN_CLOCK -weight 5 -critical 0.5
group_path -name HALF_CLK -weight 5 -critical 0.5
group_path -name INPUTS -weight 1 -critical 0.5
group_path -name OUTPUTS -weight 1 -critical 0.5
group_path -name COMBO -weight 5 -critical 1.0



###################################
#                                 #
#   ETC ATTRIBUTES      	  #
#                                 #
###################################

# We usually don't know the external capaciatnce 
# so insert buffers to isolate and protect inner logics
set_isolate_ports [all_outputs]

# there is no need to be the numerous buffers on RESETn network during synthesis 
set_ideal_network [get_ports "rst_n clk"]
#set_ideal_network [get_pins ...  get_nets 

# To hold check
#set_fix_hold [all_clocks]

# no through pass assign syntax => insert buffers
set_fix_multiple_port_nets -all -buffer_constants -feedthroughs -constants
